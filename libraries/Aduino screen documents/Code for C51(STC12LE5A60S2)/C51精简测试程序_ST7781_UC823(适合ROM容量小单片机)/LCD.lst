C51 COMPILER V9.53.0.0   LCD                                                               09/05/2015 16:10:57 PAGE 1   


C51 COMPILER V9.53.0.0, COMPILATION OF MODULE LCD
OBJECT MODULE PLACED IN .\obj\LCD.obj
COMPILER INVOKED BY: d:\Keil_v5\C51\BIN\C51.EXE LCD\LCD.c LARGE BROWSE INCDIR(.\font;.\LCD;.\sys;.\touch;.\GUI;.\USER) D
                    -EBUG OBJECTEXTEND PRINT(.\LCD.lst) TABS(2) OBJECT(.\obj\LCD.obj)

line level    source

   1          #include "sys.h"
   2          #include "lcd.h"
   3          //////////////////////////////////////////////////////////////////////////////////   
   4          //本程序只供学习使用，未经作者许可，不得用于其它任何用途
   5          //测试硬件：单片机STC12LE5A60S2,晶振30M  单片机工作电压3.3V
   6          //QDtech-TFT液晶驱动 for C51
   7          //xiao冯@ShenZhen QDtech co.,LTD
   8          //公司网站:www.qdtech.net
   9          //淘宝网站：http://qdtech.taobao.com
  10          //我司提供技术支持，任何技术问题欢迎随时交流学习
  11          //固话(传真) :+86 0755-23594567 
  12          //手机:15989313508（冯工） 
  13          //邮箱:QDtech2008@gmail.com 
  14          //Skype:QDtech2008
  15          //技术交流QQ群:324828016
  16          //创建日期:2013/5/13
  17          //版本：V1.1
  18          //版权所有，盗版必究。
  19          //Copyright(C) 深圳市全动电子技术有限公司 2009-2019
  20          //All rights reserved
  21          //********************************************************************************
  22          
  23          /**************************************************************************************
  24          //=======================================液晶屏数据线接线==========================================//
  25          //P2组高8位数据口,DB8-DB15依次连接P2^0-P2^7;8位模式下只使用高8位
  26          #define  LCD_DataPortH P2 
  27          //P0组低8位数据口,DB0-DB7依次连接P0^0-P0^7;请确认P0口已经上拉10K电阻,不宜太小，最小4.7K,推荐10K.    
  28          #define  LCD_DataPortL P0     
  29          //=======================================液晶屏控制线接线==========================================//
  30          CS=P1^3;    //片选  
  31          RS=P1^2;      //数据/命令切换
  32          WR=P1^1;    //写控制
  33          RD=P1^0;    //读控制
  34          RESET=P3^3;   //复位 
  35          LCD_BL=P3^2;  //背光控制
  36          //=========================================触摸屏触接线=========================================//
  37          //不使用触摸或者模块本身不带触摸，则可不连接
  38          DCLK    =    P3^6; //触摸屏SPI总线时钟信号接P3.6  
  39          TCS       =    P3^7; //触摸片选TCS接P3.7
  40          DIN       =    P3^4; //MOSI接P3.4 
  41          DOUT      =    P3^5; //MISO接P3.5                                              
  42          Penirq    =    P4^0; //PEN引脚接P4.0，如单片机无P4组，请自行更改其他可用IO并修改代码定义
  43          **************************************************************************************************/ 
  44          
  45          //LCD的画笔颜色和背景色    
  46          u16 POINT_COLOR=0x0000; //画笔颜色
  47          u16 BACK_COLOR=0xFFFF;  //背景色 
  48          //管理LCD重要参数
  49          //默认为竖屏
  50          _lcd_dev lcddev;
  51          
  52          
  53          //******************************************************************
  54          //函数名：  LCD_WR_REG
C51 COMPILER V9.53.0.0   LCD                                                               09/05/2015 16:10:57 PAGE 2   

  55          //作者：    xiao冯@全动电子
  56          //日期：    2013-02-22
  57          //功能：    向液晶屏总线写入写16位指令
  58          //输入参数：Reg:待写入的指令值
  59          //返回值：  无
  60          //修改记录：无
  61          //******************************************************************
  62          void LCD_WR_REG(int Reg)   
  63          { 
  64   1        LCD_RS=0;
  65   1        LCD_CS=0;
  66   1      #if LCD_USE8BIT_MODEL==1 //8位并行数据写入时序 
  67   1        LCD_DataPortH=Reg;  
  68   1      #else //16位并行数据写入时序 
                LCD_DataPortH=Reg>>8; 
                LCD_DataPortL=Reg;  
              #endif
  72   1        LCD_WR=0;
  73   1        LCD_WR=1;
  74   1        LCD_CS=1;
  75   1      } 
  76          
  77          //******************************************************************
  78          //函数名：  LCD_WR_DATA
  79          //作者：    xiao冯@全动电子
  80          //日期：    2013-02-22
  81          //功能：    向液晶屏总线写入写8位数据
  82          //输入参数：Data:待写入的数据
  83          //返回值：  无
  84          //修改记录：无
  85          //******************************************************************
  86           void LCD_WR_DATA(int Data)
  87          {
  88   1        LCD_RS=1;
  89   1        LCD_CS=0;
  90   1      #if LCD_USE8BIT_MODEL==1 //8位并行数据写入时序 
  91   1        LCD_DataPortH=Data; 
  92   1      #else //16位并行数据写入时序 
                LCD_DataPortH=Data>>8;  
                LCD_DataPortL=Data; 
              #endif
  96   1        LCD_WR=0;
  97   1        LCD_WR=1;
  98   1        LCD_CS=1;
  99   1      }
 100          
 101          //******************************************************************
 102          //函数名：  LCD_WR_DATA_16Bit
 103          //作者：    xiao冯@全动电子
 104          //日期：    2013-02-22
 105          //功能：    向液晶屏总线写入写16位数据
 106          //输入参数：Data:待写入的数据
 107          //返回值：  无
 108          //修改记录：无
 109          //******************************************************************
 110           void LCD_WR_DATA_16Bit(int Data)
 111          {
 112   1        LCD_RS=1;
 113   1        LCD_CS=0;
 114   1      #if LCD_USE8BIT_MODEL==1 //8位并行数据写入时序 
 115   1        LCD_DataPortH=Data>>8;//高8位数据 
 116   1        LCD_WR=0;
C51 COMPILER V9.53.0.0   LCD                                                               09/05/2015 16:10:57 PAGE 3   

 117   1        LCD_WR=1;
 118   1        LCD_DataPortH=Data; //低8位数据
 119   1        LCD_WR=0;
 120   1        LCD_WR=1;
 121   1      #else //16位并行数据写入时序 
                LCD_DataPortH=Data>>8;  
                LCD_DataPortL=Data; 
                LCD_WR=0;
                LCD_WR=1;
              #endif
 127   1        LCD_CS=1;
 128   1      }
 129          
 130          //******************************************************************
 131          //函数名：  LCD_WriteReg
 132          //作者：    xiao冯@全动电子
 133          //日期：    2013-02-22
 134          //功能：    写寄存器数据
 135          //输入参数：LCD_Reg:寄存器地址
 136          //      LCD_RegValue:要写入的数据
 137          //返回值：  无
 138          //修改记录：无
 139          //******************************************************************
 140          void LCD_WriteReg(u16 LCD_Reg, u16 LCD_RegValue)
 141          {
 142   1        LCD_WR_REG(LCD_Reg);
 143   1        LCD_WR_DATA(LCD_RegValue);
 144   1      }
 145          
 146          //******************************************************************
 147          //函数名：  LCD_WriteRAM_Prepare
 148          //作者：    xiao冯@全动电子
 149          //日期：    2013-02-22
 150          //功能：    开始写GRAM
 151          //      在给液晶屏传送RGB数据前，应该发送写GRAM指令
 152          //输入参数：无
 153          //返回值：  无
 154          //修改记录：无
 155          //******************************************************************
 156          void LCD_WriteRAM_Prepare(void)
 157          {
 158   1        LCD_WR_REG(lcddev.wramcmd);   
 159   1      }
 160          
 161          
 162          //******************************************************************
 163          //函数名：  LCD_Clear
 164          //作者：    xiao冯@全动电子
 165          //日期：    2013-02-22
 166          //功能：    LCD全屏填充清屏函数
 167          //输入参数：Color:要清屏的填充色
 168          //返回值：  无
 169          //修改记录：无
 170          //******************************************************************
 171          void LCD_Clear(u16 Color)
 172          {
 173   1        u16 i,j;
 174   1        LCD_SetWindows(0,0,lcddev.width-1,lcddev.height-1); 
 175   1          for(i=0;i<lcddev.width;i++)
 176   1         {
 177   2          for (j=0;j<lcddev.height;j++)
 178   2            {
C51 COMPILER V9.53.0.0   LCD                                                               09/05/2015 16:10:57 PAGE 4   

 179   3                 LCD_WR_DATA_16Bit(Color);
 180   3            }
 181   2      
 182   2          }
 183   1      }
 184          
 185          //******************************************************************
 186          //函数名：  LCD_DrawPoint
 187          //作者：    xiao冯@全动电子
 188          //日期：    2013-02-22
 189          //功能：    在指定位置写入一个像素点数据
 190          //输入参数：(x,y):光标坐标
 191          //返回值：  无
 192          //修改记录：无
 193          //******************************************************************
 194          void LCD_DrawPoint(u16 x,u16 y)
 195          {
 196   1        LCD_SetWindows(x,y,x,y);//设置光标位置 
 197   1        LCD_WR_DATA(POINT_COLOR);       
 198   1      }    
 199          
 200          //******************************************************************
 201          //函数名：  LCD_Reset
 202          //作者：    xiao冯@全动电子
 203          //日期：    2013-02-22
 204          //功能：    LCD复位函数，液晶初始化前要调用此函数
 205          //输入参数：无
 206          //返回值：  无
 207          //修改记录：无
 208          //******************************************************************
 209          void LCD_Reset(void)
 210          {
 211   1        LCD_RESET=1;
 212   1        delay_ms(50); 
 213   1        LCD_RESET=0;
 214   1        delay_ms(50);
 215   1        LCD_RESET=1;
 216   1        delay_ms(50);
 217   1      }
 218          
 219          //******************************************************************
 220          //函数名：  LCD_Init
 221          //作者：    xiao冯@全动电子
 222          //日期：    2013-02-22
 223          //功能：    LCD初始化
 224          //输入参数：无
 225          //返回值：  无
 226          //修改记录：无
 227          //******************************************************************
 228          void LCD_Init(void)
 229          {
 230   1        LCD_Reset(); //初始化之前复位
 231   1        LCD_RD=1;  //RD引脚没有用到，拉高处理
 232   1      
 233   1        //=========================液晶屏初始化=============================//
 234   1        LCD_WR_REG(0xCF);  
 235   1        LCD_WR_DATA(0x00); 
 236   1        LCD_WR_DATA(0xC1); 
 237   1        LCD_WR_DATA(0X30); 
 238   1        LCD_WR_REG(0xED);  
 239   1        LCD_WR_DATA(0x64); 
 240   1        LCD_WR_DATA(0x03); 
C51 COMPILER V9.53.0.0   LCD                                                               09/05/2015 16:10:57 PAGE 5   

 241   1        LCD_WR_DATA(0X12); 
 242   1        LCD_WR_DATA(0X81); 
 243   1        LCD_WR_REG(0xE8);  
 244   1        LCD_WR_DATA(0x85); 
 245   1        LCD_WR_DATA(0x10); 
 246   1        LCD_WR_DATA(0x7A); 
 247   1        LCD_WR_REG(0xCB);  
 248   1        LCD_WR_DATA(0x39); 
 249   1        LCD_WR_DATA(0x2C); 
 250   1        LCD_WR_DATA(0x00); 
 251   1        LCD_WR_DATA(0x34); 
 252   1        LCD_WR_DATA(0x02); 
 253   1        LCD_WR_REG(0xF7);  
 254   1        LCD_WR_DATA(0x20); 
 255   1        LCD_WR_REG(0xEA);  
 256   1        LCD_WR_DATA(0x00); 
 257   1        LCD_WR_DATA(0x00); 
 258   1        LCD_WR_REG(0xC0);    //Power control 
 259   1        LCD_WR_DATA(0x1B);   //VRH[5:0] 
 260   1        LCD_WR_REG(0xC1);    //Power control 
 261   1        LCD_WR_DATA(0x01);   //SAP[2:0];BT[3:0] 
 262   1        LCD_WR_REG(0xC5);    //VCM control 
 263   1        LCD_WR_DATA(0x30);   //3F
 264   1        LCD_WR_DATA(0x30);   //3C
 265   1        LCD_WR_REG(0xC7);    //VCM control2 
 266   1        LCD_WR_DATA(0XB7); 
 267   1        LCD_WR_REG(0x36);    // Memory Access Control 
 268   1        LCD_WR_DATA(0x48); 
 269   1        LCD_WR_REG(0x3A);   
 270   1        LCD_WR_DATA(0x55); 
 271   1        LCD_WR_REG(0xB1);   
 272   1        LCD_WR_DATA(0x00);   
 273   1        LCD_WR_DATA(0x1A); 
 274   1        LCD_WR_REG(0xB6);    // Display Function Control 
 275   1        LCD_WR_DATA(0x0A); 
 276   1        LCD_WR_DATA(0xA2); 
 277   1        LCD_WR_REG(0xF2);    // 3Gamma Function Disable 
 278   1        LCD_WR_DATA(0x00); 
 279   1        LCD_WR_REG(0x26);    //Gamma curve selected 
 280   1        LCD_WR_DATA(0x01); 
 281   1        LCD_WR_REG(0xE0);    //Set Gamma 
 282   1        LCD_WR_DATA(0x0F); 
 283   1        LCD_WR_DATA(0x2A); 
 284   1        LCD_WR_DATA(0x28); 
 285   1        LCD_WR_DATA(0x08); 
 286   1        LCD_WR_DATA(0x0E); 
 287   1        LCD_WR_DATA(0x08); 
 288   1        LCD_WR_DATA(0x54); 
 289   1        LCD_WR_DATA(0XA9); 
 290   1        LCD_WR_DATA(0x43); 
 291   1        LCD_WR_DATA(0x0A); 
 292   1        LCD_WR_DATA(0x0F); 
 293   1        LCD_WR_DATA(0x00); 
 294   1        LCD_WR_DATA(0x00); 
 295   1        LCD_WR_DATA(0x00); 
 296   1        LCD_WR_DATA(0x00);     
 297   1        LCD_WR_REG(0XE1);    //Set Gamma 
 298   1        LCD_WR_DATA(0x00); 
 299   1        LCD_WR_DATA(0x15); 
 300   1        LCD_WR_DATA(0x17); 
 301   1        LCD_WR_DATA(0x07); 
 302   1        LCD_WR_DATA(0x11); 
C51 COMPILER V9.53.0.0   LCD                                                               09/05/2015 16:10:57 PAGE 6   

 303   1        LCD_WR_DATA(0x06); 
 304   1        LCD_WR_DATA(0x2B); 
 305   1        LCD_WR_DATA(0x56); 
 306   1        LCD_WR_DATA(0x3C); 
 307   1        LCD_WR_DATA(0x05); 
 308   1        LCD_WR_DATA(0x10); 
 309   1        LCD_WR_DATA(0x0F); 
 310   1        LCD_WR_DATA(0x3F); 
 311   1        LCD_WR_DATA(0x3F); 
 312   1        LCD_WR_DATA(0x0F); 
 313   1        LCD_WR_REG(0x2B); 
 314   1        LCD_WR_DATA(0x00);
 315   1        LCD_WR_DATA(0x00);
 316   1        LCD_WR_DATA(0x01);
 317   1        LCD_WR_DATA(0x3f);
 318   1        LCD_WR_REG(0x2A); 
 319   1        LCD_WR_DATA(0x00);
 320   1        LCD_WR_DATA(0x00);
 321   1        LCD_WR_DATA(0x00);
 322   1        LCD_WR_DATA(0xef);   
 323   1        LCD_WR_REG(0x11); //Exit Sleep
 324   1        delay_ms(120);
 325   1        LCD_WR_REG(0x29); //display on 
 326   1      
 327   1        //设置LCD属性参数
 328   1        LCD_SetParam();//设置LCD参数   
 329   1        LCD_BL=1;//点亮背光  
 330   1      }
 331          /*************************************************
 332          函数名：LCD_SetWindows
 333          功能：设置lcd显示窗口，在此区域写点数据自动换行
 334          入口参数：xy起点和终点
 335          返回值：无
 336          *************************************************/
 337          void LCD_SetWindows(u16 xStar, u16 yStar,u16 xEnd,u16 yEnd)
 338          { 
 339   1        LCD_WR_REG(lcddev.setxcmd); 
 340   1        LCD_WR_DATA(xStar>>8);
 341   1        LCD_WR_DATA(0x00FF&xStar);    
 342   1        LCD_WR_DATA(xEnd>>8);
 343   1        LCD_WR_DATA(0x00FF&xEnd);
 344   1      
 345   1        LCD_WR_REG(lcddev.setycmd); 
 346   1        LCD_WR_DATA(yStar>>8);
 347   1        LCD_WR_DATA(0x00FF&yStar);    
 348   1        LCD_WR_DATA(yEnd>>8);
 349   1        LCD_WR_DATA(0x00FF&yEnd); 
 350   1      
 351   1        LCD_WriteRAM_Prepare(); //开始写入GRAM        
 352   1      }   
 353          
 354          /*************************************************
 355          函数名：LCD_SetCursor
 356          功能：设置光标位置
 357          入口参数：xy坐标
 358          返回值：无
 359          *************************************************/
 360          void LCD_SetCursor(u16 Xpos, u16 Ypos)
 361          {               
 362   1        LCD_WR_REG(lcddev.setxcmd); 
 363   1        LCD_WR_DATA(Xpos>>8);
 364   1        LCD_WR_DATA(0x00FF&Xpos);   
C51 COMPILER V9.53.0.0   LCD                                                               09/05/2015 16:10:57 PAGE 7   

 365   1      
 366   1        
 367   1        LCD_WR_REG(lcddev.setycmd); 
 368   1        LCD_WR_DATA(Ypos>>8);
 369   1        LCD_WR_DATA(0x00FF&Ypos);   
 370   1      
 371   1        LCD_WriteRAM_Prepare(); //开始写入GRAM  
 372   1      } 
 373          
 374          //设置LCD参数
 375          //方便进行横竖屏模式切换
 376          void LCD_SetParam(void)
 377          {   
 378   1        lcddev.wramcmd=0x2C;
 379   1      #if USE_HORIZONTAL==1 //使用横屏    
 380   1        lcddev.dir=1;//横屏
 381   1        lcddev.width=320;
 382   1        lcddev.height=240;
 383   1        lcddev.setxcmd=0x2A;
 384   1        lcddev.setycmd=0x2B;      
 385   1        LCD_WriteReg(0x36,0x6C);
 386   1      
 387   1      #else//竖屏
                lcddev.dir=0;//竖屏             
                lcddev.width=240;
                lcddev.height=320;
                lcddev.setxcmd=0x2A;
                lcddev.setycmd=0x2B;  
                LCD_WriteReg(0x36,0x0A);
              #endif
 395   1      }
 396          
 397          
 398          
 399          
 400          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    884    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =     17      12
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
