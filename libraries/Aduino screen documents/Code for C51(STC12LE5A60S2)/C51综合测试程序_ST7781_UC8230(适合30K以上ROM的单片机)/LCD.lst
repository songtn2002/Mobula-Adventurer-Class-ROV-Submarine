C51 COMPILER V9.53.0.0   LCD                                                               06/12/2015 18:03:36 PAGE 1   


C51 COMPILER V9.53.0.0, COMPILATION OF MODULE LCD
OBJECT MODULE PLACED IN .\obj\LCD.obj
COMPILER INVOKED BY: d:\Keil_v5\C51\BIN\C51.EXE LCD\LCD.c LARGE BROWSE INCDIR(.\font;.\LCD;.\sys;.\touch;.\GUI;.\USER) D
                    -EBUG OBJECTEXTEND PRINT(.\LCD.lst) TABS(2) OBJECT(.\obj\LCD.obj)

line level    source

   1          #include "sys.h"
   2          #include "lcd.h"
   3          //////////////////////////////////////////////////////////////////////////////////   
   4          //本程序只供学习使用，未经作者许可，不得用于其它任何用途
   5          //测试硬件：单片机STC12LE5A60S2,晶振30M  单片机工作电压3.3V
   6          //QDtech-TFT液晶驱动 for C51
   7          //xiao冯@ShenZhen QDtech co.,LTD
   8          //公司网站:www.qdtech.net
   9          //淘宝网站：http://qdtech.taobao.com
  10          //我司提供技术支持，任何技术问题欢迎随时交流学习
  11          //固话(传真) :+86 0755-23594567 
  12          //手机:15989313508（冯工） 
  13          //邮箱:QDtech2008@gmail.com 
  14          //Skype:QDtech2008
  15          //技术交流QQ群:324828016
  16          //创建日期:2013/5/13
  17          //版本：V1.1
  18          //版权所有，盗版必究。
  19          //Copyright(C) 深圳市全动电子技术有限公司 2009-2019
  20          //All rights reserved
  21          //********************************************************************************
  22          //=========================================电源接线================================================//
  23          //5V接DC 5V电源
  24          //GND接地
  25          //=======================================液晶屏数据线接线==========================================//
  26          //本模块默认数据总线类型为8位并行模式
  27          //8位模式接线：8位模式9341模块接高8位总线，即:
  28          //液晶屏LCD_D0对应单片机P2.0
  29          //液晶屏LCD_D1对应单片机P2.1
  30          //液晶屏LCD_D2对应单片机P2.2
  31          //液晶屏LCD_D3对应单片机P2.3
  32          //液晶屏LCD_D4对应单片机P2.4
  33          //液晶屏LCD_D5对应单片机P2.5
  34          //液晶屏LCD_D6对应单片机P2.6
  35          //液晶屏LCD_D7对应单片机P2.7
  36          //=======================================液晶屏控制线接线==========================================//
  37          //LCD_RST 接P3.3  //复位信号
  38          //LCD_CS  接P1.3  //片选信号
  39          //LCD_RS  接P1.2  //寄存器/数据选择信号
  40          //LCD_WR  接P1.1  //写信号
  41          //LCD_RD  接P1.0  //读信号
  42          //=========================================触摸屏触接线=========================================//
  43          //本模块触摸测试需连接外部XPT2046触摸采样芯片，所以本程序不进行触摸测试。
  44          //不使用触摸或者模块本身不带触摸，则可不连接
  45          /**************************************************************************************************/  
  46          
  47          //LCD的画笔颜色和背景色    
  48          u16 POINT_COLOR=0x0000; //画笔颜色
  49          u16 BACK_COLOR=0xFFFF;  //背景色 
  50          //管理LCD重要参数
  51          //默认为竖屏
  52          _lcd_dev lcddev;
  53          
  54          
C51 COMPILER V9.53.0.0   LCD                                                               06/12/2015 18:03:36 PAGE 2   

  55          //******************************************************************
  56          //函数名：  LCD_WR_REG
  57          //作者：    xiao冯@全动电子
  58          //日期：    2013-02-22
  59          //功能：    向液晶屏总线写入写16位指令
  60          //输入参数：Reg:待写入的指令值
  61          //返回值：  无
  62          //修改记录：无
  63          //******************************************************************
  64          void LCD_WR_REG(int Reg)   
  65          { 
  66   1        LCD_RS=0;
  67   1        LCD_CS=0;
  68   1      #if LCD_USE8BIT_MODEL==1 //8位并行数据写入时序 
  69   1        LCD_DataPortH=Reg;  
  70   1      #else //16位并行数据写入时序 
                LCD_DataPortH=Reg>>8; 
                LCD_DataPortL=Reg;  
              #endif
  74   1        LCD_WR=0;
  75   1        LCD_WR=1;
  76   1        LCD_CS=1;
  77   1      } 
  78          
  79          //******************************************************************
  80          //函数名：  LCD_WR_DATA
  81          //作者：    xiao冯@全动电子
  82          //日期：    2013-02-22
  83          //功能：    向液晶屏总线写入写8位数据
  84          //输入参数：Data:待写入的数据
  85          //返回值：  无
  86          //修改记录：无
  87          //******************************************************************
  88           void LCD_WR_DATA(int Data)
  89          {
  90   1        LCD_RS=1;
  91   1        LCD_CS=0;
  92   1      #if LCD_USE8BIT_MODEL==1 //8位并行数据写入时序 
  93   1        LCD_DataPortH=Data; 
  94   1      #else //16位并行数据写入时序 
                LCD_DataPortH=Data>>8;  
                LCD_DataPortL=Data; 
              #endif
  98   1        LCD_WR=0;
  99   1        LCD_WR=1;
 100   1        LCD_CS=1;
 101   1      }
 102          
 103          //******************************************************************
 104          //函数名：  LCD_WR_DATA_16Bit
 105          //作者：    xiao冯@全动电子
 106          //日期：    2013-02-22
 107          //功能：    向液晶屏总线写入写16位数据
 108          //输入参数：Data:待写入的数据
 109          //返回值：  无
 110          //修改记录：无
 111          //******************************************************************
 112           void LCD_WR_DATA_16Bit(int Data)
 113          {
 114   1        LCD_RS=1;
 115   1        LCD_CS=0;
 116   1      #if LCD_USE8BIT_MODEL==1 //8位并行数据写入时序 
C51 COMPILER V9.53.0.0   LCD                                                               06/12/2015 18:03:36 PAGE 3   

 117   1        LCD_DataPortH=Data>>8;//高8位数据 
 118   1        LCD_WR=0;
 119   1        LCD_WR=1;
 120   1        LCD_DataPortH=Data; //低8位数据
 121   1        LCD_WR=0;
 122   1        LCD_WR=1;
 123   1      #else //16位并行数据写入时序 
                LCD_DataPortH=Data>>8;  
                LCD_DataPortL=Data; 
                LCD_WR=0;
                LCD_WR=1;
              #endif
 129   1        LCD_CS=1;
 130   1      }
 131          
 132          //******************************************************************
 133          //函数名：  LCD_WriteReg
 134          //作者：    xiao冯@全动电子
 135          //日期：    2013-02-22
 136          //功能：    写寄存器数据
 137          //输入参数：LCD_Reg:寄存器地址
 138          //      LCD_RegValue:要写入的数据
 139          //返回值：  无
 140          //修改记录：无
 141          //******************************************************************
 142          void LCD_WriteReg(u16 LCD_Reg, u16 LCD_RegValue)
 143          {
 144   1        LCD_WR_REG(LCD_Reg);
 145   1        LCD_WR_DATA(LCD_RegValue);
 146   1      }
 147          
 148          //******************************************************************
 149          //函数名：  LCD_WriteRAM_Prepare
 150          //作者：    xiao冯@全动电子
 151          //日期：    2013-02-22
 152          //功能：    开始写GRAM
 153          //      在给液晶屏传送RGB数据前，应该发送写GRAM指令
 154          //输入参数：无
 155          //返回值：  无
 156          //修改记录：无
 157          //******************************************************************
 158          void LCD_WriteRAM_Prepare(void)
 159          {
 160   1        LCD_WR_REG(lcddev.wramcmd);   
 161   1      }
 162          
 163          
 164          //******************************************************************
 165          //函数名：  LCD_Clear
 166          //作者：    xiao冯@全动电子
 167          //日期：    2013-02-22
 168          //功能：    LCD全屏填充清屏函数
 169          //输入参数：Color:要清屏的填充色
 170          //返回值：  无
 171          //修改记录：无
 172          //******************************************************************
 173          void LCD_Clear(u16 Color)
 174          {
 175   1        u16 i,j;
 176   1        LCD_SetWindows(0,0,lcddev.width-1,lcddev.height-1); 
 177   1          for(i=0;i<lcddev.width;i++)
 178   1         {
C51 COMPILER V9.53.0.0   LCD                                                               06/12/2015 18:03:36 PAGE 4   

 179   2          for (j=0;j<lcddev.height;j++)
 180   2            {
 181   3                 LCD_WR_DATA_16Bit(Color);
 182   3            }
 183   2      
 184   2          }
 185   1      }
 186          
 187          //******************************************************************
 188          //函数名：  LCD_DrawPoint
 189          //作者：    xiao冯@全动电子
 190          //日期：    2013-02-22
 191          //功能：    在指定位置写入一个像素点数据
 192          //输入参数：(x,y):光标坐标
 193          //返回值：  无
 194          //修改记录：无
 195          //******************************************************************
 196          void LCD_DrawPoint(u16 x,u16 y)
 197          {
 198   1        LCD_SetWindows(x,y,x,y);//设置光标位置 
 199   1        LCD_WR_DATA_16Bit(POINT_COLOR);       
 200   1      }    
 201          
 202          //******************************************************************
 203          //函数名：  LCD_Reset
 204          //作者：    xiao冯@全动电子
 205          //日期：    2013-02-22
 206          //功能：    LCD复位函数，液晶初始化前要调用此函数
 207          //输入参数：无
 208          //返回值：  无
 209          //修改记录：无
 210          //******************************************************************
 211          void LCD_Reset(void)
 212          {
 213   1        LCD_RESET=1;
 214   1        delay_ms(50); 
 215   1        LCD_RESET=0;
 216   1        delay_ms(50);
 217   1        LCD_RESET=1;
 218   1        delay_ms(50);
 219   1      }
 220          
 221          //******************************************************************
 222          //函数名：  LCD_Init
 223          //作者：    xiao冯@全动电子
 224          //日期：    2013-02-22
 225          //功能：    LCD初始化
 226          //输入参数：无
 227          //返回值：  无
 228          //修改记录：无
 229          //******************************************************************
 230          void LCD_Init(void)
 231          {
 232   1        LCD_Reset(); //初始化之前复位
 233   1        LCD_RD=1;  //RD引脚没有用到，拉高处理
 234   1      
 235   1      //************* Start Initial Sequence **********//   
 236   1        LCD_WR_REG(0xCF);  
 237   1        LCD_WR_DATA(0x00); 
 238   1        LCD_WR_DATA(0xC1); 
 239   1        LCD_WR_DATA(0X30); 
 240   1        LCD_WR_REG(0xED);  
C51 COMPILER V9.53.0.0   LCD                                                               06/12/2015 18:03:36 PAGE 5   

 241   1        LCD_WR_DATA(0x64); 
 242   1        LCD_WR_DATA(0x03); 
 243   1        LCD_WR_DATA(0X12); 
 244   1        LCD_WR_DATA(0X81); 
 245   1        LCD_WR_REG(0xE8);  
 246   1        LCD_WR_DATA(0x85); 
 247   1        LCD_WR_DATA(0x10); 
 248   1        LCD_WR_DATA(0x7A); 
 249   1        LCD_WR_REG(0xCB);  
 250   1        LCD_WR_DATA(0x39); 
 251   1        LCD_WR_DATA(0x2C); 
 252   1        LCD_WR_DATA(0x00); 
 253   1        LCD_WR_DATA(0x34); 
 254   1        LCD_WR_DATA(0x02); 
 255   1        LCD_WR_REG(0xF7);  
 256   1        LCD_WR_DATA(0x20); 
 257   1        LCD_WR_REG(0xEA);  
 258   1        LCD_WR_DATA(0x00); 
 259   1        LCD_WR_DATA(0x00); 
 260   1        LCD_WR_REG(0xC0);    //Power control 
 261   1        LCD_WR_DATA(0x1B);   //VRH[5:0] 
 262   1        LCD_WR_REG(0xC1);    //Power control 
 263   1        LCD_WR_DATA(0x01);   //SAP[2:0];BT[3:0] 
 264   1        LCD_WR_REG(0xC5);    //VCM control 
 265   1        LCD_WR_DATA(0x30);   //3F
 266   1        LCD_WR_DATA(0x30);   //3C
 267   1        LCD_WR_REG(0xC7);    //VCM control2 
 268   1        LCD_WR_DATA(0XB7); 
 269   1        LCD_WR_REG(0x36);    // Memory Access Control 
 270   1        LCD_WR_DATA(0x48); 
 271   1        LCD_WR_REG(0x3A);   
 272   1        LCD_WR_DATA(0x55); 
 273   1        LCD_WR_REG(0xB1);   
 274   1        LCD_WR_DATA(0x00);   
 275   1        LCD_WR_DATA(0x1A); 
 276   1        LCD_WR_REG(0xB6);    // Display Function Control 
 277   1        LCD_WR_DATA(0x0A); 
 278   1        LCD_WR_DATA(0xA2); 
 279   1        LCD_WR_REG(0xF2);    // 3Gamma Function Disable 
 280   1        LCD_WR_DATA(0x00); 
 281   1        LCD_WR_REG(0x26);    //Gamma curve selected 
 282   1        LCD_WR_DATA(0x01); 
 283   1        LCD_WR_REG(0xE0);    //Set Gamma 
 284   1        LCD_WR_DATA(0x0F); 
 285   1        LCD_WR_DATA(0x2A); 
 286   1        LCD_WR_DATA(0x28); 
 287   1        LCD_WR_DATA(0x08); 
 288   1        LCD_WR_DATA(0x0E); 
 289   1        LCD_WR_DATA(0x08); 
 290   1        LCD_WR_DATA(0x54); 
 291   1        LCD_WR_DATA(0XA9); 
 292   1        LCD_WR_DATA(0x43); 
 293   1        LCD_WR_DATA(0x0A); 
 294   1        LCD_WR_DATA(0x0F); 
 295   1        LCD_WR_DATA(0x00); 
 296   1        LCD_WR_DATA(0x00); 
 297   1        LCD_WR_DATA(0x00); 
 298   1        LCD_WR_DATA(0x00);     
 299   1        LCD_WR_REG(0XE1);    //Set Gamma 
 300   1        LCD_WR_DATA(0x00); 
 301   1        LCD_WR_DATA(0x15); 
 302   1        LCD_WR_DATA(0x17); 
C51 COMPILER V9.53.0.0   LCD                                                               06/12/2015 18:03:36 PAGE 6   

 303   1        LCD_WR_DATA(0x07); 
 304   1        LCD_WR_DATA(0x11); 
 305   1        LCD_WR_DATA(0x06); 
 306   1        LCD_WR_DATA(0x2B); 
 307   1        LCD_WR_DATA(0x56); 
 308   1        LCD_WR_DATA(0x3C); 
 309   1        LCD_WR_DATA(0x05); 
 310   1        LCD_WR_DATA(0x10); 
 311   1        LCD_WR_DATA(0x0F); 
 312   1        LCD_WR_DATA(0x3F); 
 313   1        LCD_WR_DATA(0x3F); 
 314   1        LCD_WR_DATA(0x0F); 
 315   1        LCD_WR_REG(0x2B); 
 316   1        LCD_WR_DATA(0x00);
 317   1        LCD_WR_DATA(0x00);
 318   1        LCD_WR_DATA(0x01);
 319   1        LCD_WR_DATA(0x3f);
 320   1        LCD_WR_REG(0x2A); 
 321   1        LCD_WR_DATA(0x00);
 322   1        LCD_WR_DATA(0x00);
 323   1        LCD_WR_DATA(0x00);
 324   1        LCD_WR_DATA(0xef);   
 325   1        LCD_WR_REG(0x11); //Exit Sleep
 326   1        delay_ms(120);
 327   1        LCD_WR_REG(0x29); //display on  
 328   1      
 329   1        //设置LCD属性参数
 330   1        LCD_SetParam();//设置LCD参数   
 331   1        LCD_BL=1;//点亮背光  
 332   1      }
 333          /*************************************************
 334          函数名：LCD_SetWindows
 335          功能：设置lcd显示窗口，在此区域写点数据自动换行
 336          入口参数：xy起点和终点
 337          返回值：无
 338          *************************************************/
 339          void LCD_SetWindows(u16 xStar, u16 yStar,u16 xEnd,u16 yEnd)
 340          { 
 341   1        LCD_WR_REG(lcddev.setxcmd); 
 342   1        LCD_WR_DATA(xStar>>8);
 343   1        LCD_WR_DATA(0x00FF&xStar);    
 344   1        LCD_WR_DATA(xEnd>>8);
 345   1        LCD_WR_DATA(0x00FF&xEnd);
 346   1      
 347   1        LCD_WR_REG(lcddev.setycmd); 
 348   1        LCD_WR_DATA(yStar>>8);
 349   1        LCD_WR_DATA(0x00FF&yStar);    
 350   1        LCD_WR_DATA(yEnd>>8);
 351   1        LCD_WR_DATA(0x00FF&yEnd); 
 352   1      
 353   1        LCD_WriteRAM_Prepare(); //开始写入GRAM        
 354   1      }   
 355          
 356          /*************************************************
 357          函数名：LCD_SetCursor
 358          功能：设置光标位置
 359          入口参数：xy坐标
 360          返回值：无
 361          *************************************************/
 362          void LCD_SetCursor(u16 Xpos, u16 Ypos)
 363          {               
 364   1        LCD_WR_REG(lcddev.setxcmd); 
C51 COMPILER V9.53.0.0   LCD                                                               06/12/2015 18:03:36 PAGE 7   

 365   1        LCD_WR_DATA(Xpos>>8);
 366   1        LCD_WR_DATA(0x00FF&Xpos);   
 367   1      
 368   1        
 369   1        LCD_WR_REG(lcddev.setycmd); 
 370   1        LCD_WR_DATA(Ypos>>8);
 371   1        LCD_WR_DATA(0x00FF&Ypos);   
 372   1      
 373   1        LCD_WriteRAM_Prepare(); //开始写入GRAM  
 374   1      } 
 375          
 376          //设置LCD参数
 377          //方便进行横竖屏模式切换
 378          void LCD_SetParam(void)
 379          {   
 380   1        lcddev.wramcmd=0x2C;
 381   1      #if USE_HORIZONTAL==1 //使用横屏    
 382   1        lcddev.dir=1;//横屏
 383   1        lcddev.width=320;
 384   1        lcddev.height=240;
 385   1        lcddev.setxcmd=0x2A;
 386   1        lcddev.setycmd=0x2B;      
 387   1        LCD_WriteReg(0x36,0x6C);
 388   1      
 389   1      #else//竖屏
                lcddev.dir=0;//竖屏             
                lcddev.width=240;
                lcddev.height=320;
                lcddev.setxcmd=0x2A;
                lcddev.setycmd=0x2B;  
                LCD_WriteReg(0x36,0x0A);
              #endif
 397   1      }
 398          
 399          
 400          
 401          
 402          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    884    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =     17      12
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
